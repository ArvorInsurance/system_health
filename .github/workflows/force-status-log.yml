name: Force Status Log
on:
  schedule:
    - cron: "*/5 * * * *"  # 每5分鐘運行一次
  workflow_dispatch:

jobs:
  force-log:
    name: Force Status Log
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT || github.token }}
      
      - name: Check endpoints and force log
        run: |
          echo "🔄 Force checking endpoints and logging status..."
          
          # Get current timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")
          
          # Check each endpoint and log status
          echo "📊 Checking endpoints at $TIMESTAMP"
          
          # Company Research Website
          echo "🌐 Checking Company Research Website..."
          if curl -s -o /dev/null -w "%{http_code} %{time_total}" "https://company-research.apps.arvorinsurance.com/" | grep -q "200"; then
            echo "✅ Company Research Website is up"
            echo "🟩 Company Research Website is up (200 in $(curl -s -o /dev/null -w "%{time_total}" "https://company-research.apps.arvorinsurance.com/")s) [skip ci] [upptime]" >> force-status.log
          else
            echo "❌ Company Research Website is down"
            echo "🔴 Company Research Website is down [skip ci] [upptime]" >> force-status.log
          fi
          
          # Company Research Health
          echo "🏥 Checking Company Research Health..."
          if curl -s -o /dev/null -w "%{http_code} %{time_total}" "https://company-research.apps.arvorinsurance.com/api/health" | grep -q "200"; then
            echo "✅ Company Research Health is up"
            echo "🟩 Company Research Health is up (200 in $(curl -s -o /dev/null -w "%{time_total}" "https://company-research.apps.arvorinsurance.com/api/health")s) [skip ci] [upptime]" >> force-status.log
          else
            echo "❌ Company Research Health is down"
            echo "🔴 Company Research Health is down [skip ci] [upptime]" >> force-status.log
          fi
          
          # Company Research Auth
          echo "🔐 Checking Company Research Auth..."
          if curl -s -o /dev/null -w "%{http_code} %{time_total}" "https://company-research.apps.arvorinsurance.com/api/auth/verify" | grep -q "200"; then
            echo "✅ Company Research Auth is up"
            echo "🟩 Company Research Auth is up (200 in $(curl -s -o /dev/null -w "%{time_total}" "https://company-research.apps.arvorinsurance.com/api/auth/verify")s) [skip ci] [upptime]" >> force-status.log
          else
            echo "❌ Company Research Auth is down"
            echo "🔴 Company Research Auth is down [skip ci] [upptime]" >> force-status.log
          fi
          
          # Company Research Core API
          echo "🔌 Checking Company Research Core API..."
          if curl -s -o /dev/null -w "%{http_code} %{time_total}" "https://company-research.apps.arvorinsurance.com/api/advice/research" | grep -q "200"; then
            echo "✅ Company Research Core API is up"
            echo "🟩 Company Research Core API is up (200 in $(curl -s -o /dev/null -w "%{time_total}" "https://company-research.apps.arvorinsurance.com/api/advice/research")s) [skip ci] [upptime]" >> force-status.log
          else
            echo "❌ Company Research Core API is down"
            echo "🔴 Company Research Core API is down [skip ci] [upptime]" >> force-status.log
          fi
          
          echo "📝 Status logged to force-status.log"
      
      - name: Commit and push status log
        run: |
          if [ -f force-status.log ]; then
            echo "📤 Committing and pushing status log..."
            
            # Configure git
            git config --local user.email "upptime-bot@users.noreply.github.com"
            git config --local user.name "Upptime Bot"
            
            # Add and commit the log file
            git add force-status.log
            git commit -m "📊 Force status log update [skip ci] [upptime]"
            
            # Push to repository
            git push origin HEAD:master
          else
            echo "⚠️ No status log file found"
          fi
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
